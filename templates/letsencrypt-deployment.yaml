{{- if true }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "vault.fullname" . }}-letsencrypt-deployment
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: {{ include "vault.name" . }}-letsencrypt-deployment
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    component: letsencrypt
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      component: letsencrypt
  template:
    metadata:
      labels:
        helm.sh/chart: {{ template "vault.chart" . }}
        app.kubernetes.io/name: {{ template "vault.name" . }}-letsencrypt-deployment
        app.kubernetes.io/instance: {{ .Release.Name }}
        component: letsencrypt
        {{- if  .Values.server.extraLabels -}}
          {{- toYaml .Values.server.extraLabels | nindent 8 -}}
        {{- end -}}
      {{ template "vault.annotations" . }}
    spec:
      serviceAccountName: {{ template "vault.fullname" . }}
      volumes:
        - name: letsencrypt-script
          configMap:
            name: {{ template "vault.fullname" . }}-letsencrypt-create-certificate-script
        - name: letsencrypt-ovhapi
          secret:
            secretName: letsencrypt-ovhapi
            defaultMode: 256
        - name: vault-letsencrypt
          persistentVolumeClaim:
            claimName: vault-letsencrypt
{{/*      initContainers:*/}}
{{/*        - name: letsencrypt-deployment-init*/}}
{{/*          image: certbot/dns-ovh:v1.8.0*/}}
{{/*          imagePullPolicy: {{ .Values.server.image.pullPolicy }}*/}}
{{/*          command:*/}}
{{/*            - /bin/sh*/}}
{{/*            - '-ec'*/}}
{{/*          args:*/}}
{{/*            - >*/}}
{{/*              echo "USER";*/}}
{{/*              echo $USER;*/}}
{{/*              id;*/}}
{{/*              echo $HOME;*/}}
{{/*              echo "pwd";*/}}
{{/*              pwd;*/}}
{{/*              pip install --upgrade pip;*/}}
{{/*              pip install kubernetes;*/}}
{{/*              certbot certonly --dry-run -m admin@singlespot.com --agree-tos --dns-ovh --dns-ovh-credentials \*/}}
{{/*                /root/config/ovh.ini -d vault-dev.singlespot.com --rsa-key-size 4096 --config-dir \*/}}
{{/*                /opt/letsencrypt/config --work-dir /opt/letsencrypt/work --logs-dir /opt/letsencrypt/logs \*/}}
{{/*                --non-interactive;*/}}
{{/*              python /root/script/create_cert_secret.py*/}}
{{/*          env: []*/}}
{{/*          volumeMounts:*/}}
{{/*            - name: letsencrypt-script*/}}
{{/*              mountPath: /root/script/*/}}
{{/*            - name: letsencrypt-ovhapi*/}}
{{/*              readOnly: true*/}}
{{/*              mountPath: /root/config/*/}}
{{/*            - name: vault-letsencrypt*/}}
{{/*              mountPath: /opt/letsencrypt*/}}
      containers:
        - name: letsencrypt-deployment
          image: certbot/dns-ovh:v1.8.0
          imagePullPolicy: {{ .Values.server.image.pullPolicy }}
          command:
            - /bin/sh
            - '-ec'
          args:
            - >
              sleep 600
          env: []
          volumeMounts:
            - name: letsencrypt-script
              mountPath: /root/config/
            - name: letsencrypt-ovhapi
              readOnly: true
              mountPath: /root/script/
            - name: vault-letsencrypt
              mountPath: /opt/letsencrypt
{{- end }}
